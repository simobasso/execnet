.. _group:

Creating and working with grouped Gateways
------------------------------------------------------

Use ``execnet.Group`` to manage the lifetime of multiple 
gateways and perform iteration and membership
checks::

    >>> import execnet
    >>> group = execnet.Group()
    >>> group.makegateway("popen")
    <PopenGateway id='1' receive-live, 0 active channels>
    >>> group.makegateway("popen")
    <PopenGateway id='2' receive-live, 0 active channels>
    >>> group
    <Group ['1', '2']>
    >>> list(group) 
    [<PopenGateway id='1' receive-live, 0 active channels>, <PopenGateway id='2' receive-live, 0 active channels>]
    >>> len(group)
    2
    >>> '1' in group and '2' in group
    True
    >>> group['1']
    <PopenGateway id='1' receive-live, 0 active channels>

    >>> group.terminate() # exit all member gateways
    >>> group
    <Group []>

Assigning Gateway IDs 
------------------------------------------------------

All gateways are created as part of a group and receive
a per-group unique ``id`` after successful initialization.  
Pass an ``id=MYNAME`` part to ``group.makegateway``. Example::

    >>> import execnet
    >>> group = execnet.Group()
    >>> gw = group.makegateway("popen//id=sub1")
    >>> assert gw.id == "sub1"
    >>> group['sub1']
    <PopenGateway id='sub1' receive-live, 0 active channels>


Gateways live in a default_group
------------------------------------------------------

Each time you create a gateway with ``execnet.makegateway()``
you actually use the ``execnet.default_group``::

    >>> import execnet
    >>> gw = execnet.makegateway("popen")
    >>> gw in execnet.default_group
    True

Robust Termination of ssh/popen processes
-----------------------------------------------

Use ``group.terminate(timeout)`` if you want to terminate 
member gateways and ensure that no local sub processes remain
you can specify a ``timeout`` after which an attempt at killing
the related process is made::

    >>> import execnet
    >>> group = execnet.Group()
    >>> gw = group.makegateway("popen//id=sleeper")
    >>> ch = gw.remote_exec("import time ; time.sleep(2.0)")
    >>> group
    <Group ['sleeper']>
    >>> group.terminate(timeout=1.0)
    >>> group
    <Group []>

execnet aims to provide totally robust termination so if 
you have termination issues please report them via :doc:`contact <../contact>`. 
thanks!
