report back errors when calling callbacks 
---------------------------------------------------

tags: 1.0 
bb: http://bitbucket.org/hpk42/py-trunk/issue/37/
path: execnet/gateway_base.py

Callbacks are invoked in the receiver-thread
and any exception will kill the whole receiver-thread. 
This is especially bad if it happens remotely as 
it leaves the other side inaccesssible. 

rsync links from posix to windows 
-----------------------------------------
tags: 1.1 feature
bb: http://bitbucket.org/hpk42/py-trunk/issue/35
path: execnet/rsync.py 

currently rsyncing bails out with a strange message when trying to rsync
links. should provide better message or even some support for doing it.

a process keeping state across invoactions
--------------------------------------------------
tags: 1.1 feature newdist 

A building block for keeping permanent network 
connections would be a started-on-first-access process 
that keeps state. Considered:

- PopenGateway imports local execnet package
  and avoids parse/compile code strings

- a rendevouz process that starts threads for each
  incoming connection.  On each such connection
  a SocketGateway can be instantiated but it 
  will re-use the already-imported gateway base code
  so again avoid parse/compile on arbitrary strings.

a channel-IO based gateway
--------------------------------------------------
tags: 1.1 feature newdist 

A building block for establishing a permanent hierarchy
of processes is a Gateway that operates on a Channel object.
This way a gateway can be instantiated through another
intermediating gateway which bi-directionallry forwads 
Messages through a existing channel.

cleanup remote_status / receive status
----------------------------------------
tags: 1.0.1 feature

remote_status() will only return a result object
if the other side could receive so the "receiving"
bit is redundant.  Rather a gateway needs a
gateway.isreceiving() method. 
